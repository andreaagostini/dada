<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="dada.analysis.rhythmdistrib" module="dada" kind="patcher">

	<digest>
		Rhythmic energy distribution
	</digest>

	<description>
		Finds the rhythmic energy distribution of a score
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">dada</metadata>
		<metadata name="tag">dada abstractions</metadata>
		<metadata name="tag">dada analysis</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Score gathered syntax
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Energy distribution
			</digest>
			<description>
				Outputs the energy distribution corresponding to each one of the
				onsets.
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Onsets
			</digest>
			<description>
				Outputs the quantized onsets.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="numdiv" optional="1" type="int">
			<digest>
				Number of Regions
			</digest>
			<description>
				Sets the number N of equally spaced regions into which
				will serve as grid for the quantization (the grid will contain hence
				N+1 onsets, considering the first and last one).
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output result
			</digest>
			<description>
				Outputs the result of the analysis performed on the most recently received input data.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Perform analysis
			</digest>
			<description>
				An <m>llll</m> in the first inlet is considered as a <o>bach.roll</o> or
				<o>bach.score</o> gathered syntax on which the analysis should be performed. The
				score is divided into N (which is the <m>numdiv</m> attribute) equally spaced
				regions and each note is then quantized to the nearest one of the N+1 corresponding
				onsets. Such onsets are output through the second outlet, and then the
				corresponding energy distribution is output through the left outlet.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="numdiv" get="1" set="1" type="int" size="1">
			<digest>
				Number of Regions
			</digest>
			<description>
				Sets the number N of equally spaced regions into which
				will serve as grid for the quantization (the grid will contain hence
				N+1 onsets, considering the first and last one).
			</description>
			<attributelist>
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Number of Regions" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The onsets are quantized into N uniformly spaced regions
		(where N is the <m>numdiv</m> attribute); then the velocities
		of the corresponding notes are summed, and finally normalized.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="dada.segment" />
		<seealso name="dada.catart" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				Score gathered syntax.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Energy distribution.
				Outputs the energy distribution corresponding to each one of the
				onsets.
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				Onsets.
				Outputs the quantized onsets.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The onsets are quantized into N uniformly spaced regions
		(where N is the <m>numdiv</m> attribute); then the velocities
		of the corresponding notes are summed, and finally normalized.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
analysis, onset, rhythm, distribution, normalize, region, energy, velocity.
			</description>
		</entry>
	</misc>

</c74object>