<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="dada.multibrot" module="dada">

	<digest>
		Mandelbrot set and its generalizations
	</digest>

	<description>
		Get divergence information of multibrot sets
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">dada</metadata>
		<metadata name="tag">dada interfaces</metadata>
		<metadata name="tag">dada rule-based systems</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Get information about point
			</digest>
			<description>
				First inlet expects <m>getinfo</m> message followed by the <m>x</m> and <m>y</m> of the point to inspect.
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				Dump outlet (unused)
			</digest>
			<description>
				This outlet is currently unused, and kept for possible future compatibiity.
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Queries and Notifications
			</digest>
			<description>
				Outputs result for queries and notifications
			</description>
		</outlet>
		<outlet id="2" type="INLET_TYPE">
			<digest>
				Click information
			</digest>
			<description>
				Outputs convergence information for the clicked point
			</description>
		</outlet>
		<outlet id="3" type="INLET_TYPE">
			<digest>
				Message information
			</digest>
			<description>
				Outputs convergence information when a <m>getinfo</m> message is received
			</description>
		</outlet>
		<outlet id="4" type="INLET_TYPE">
			<digest>
				bang when object is changed via the interface (unused)
			</digest>
			<description>
				This outlet is currently unused, and kept for possible future compatibiity.
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="(keyboard)">
			<arglist />
			<digest>
				Navigate
			</digest>
			<description>
				// <m>Esc</m>: reset zoom
			</description>
		</method>
		<method name="(mouse)">
			<arglist />
			<digest>
				Output information
			</digest>
			<description>
				// <m>click</m> or <m>click+drag</m>: set tester position and output divergence information
			</description>
		</method>
		<method name="(tools)">
			<arglist />
			<digest>
				Navigate
			</digest>
			<description>
				// @copy DADA_DOC_TOOLS_ZX
			</description>
		</method>
		<method name="domain">
			<arg name="arguments" optional="0" type="list" />
			<digest>
				Set the X domain
			</digest>
			<description>
				The <m>domain</m> message, followed by two numbers, sets minimum and maximum coordinates
				to be displayed on the X axis.
				The <m>domain</m> message,  followed by the "start" or "end" symbol and a number, sets the coordinate
				to be displayed respectively at the left boundary or at the right boundary of the object box.
			</description>
		</method>
		<method name="exportpng">
			<arg name="filename" optional="0" type="symbol" />
			<arg name="params" optional="1" type="llll" />
			<digest>
				Export PNG image
			</digest>
			<description>
				The word <m>exportpng</m>, followed by an file path, exports the current canvas as a PNG image.
				This can be further followed by a list formatted as:
				<b>(<m>specification</m> <m>value</m>) (<m>specification</m> <m>value</m>)...</b>. <br />
				Each specification can be one of the followings: <br />
				• "dpi": the value is expected to be the dpi resolution of the exported image; <br />
				• "width": the value is expected to be the width of the exported image in pixels; <br />
				• "height": the value is expected to be the height of the exported image in pixels; <br />
				• "center": the value is expected to be an llll containing the coordinates of the center; <br />
			</description>
		</method>
		<method name="getdomain">
			<arglist />
			<digest>
				Retrieve current X domain
			</digest>
			<description>
				The <m>getdomain</m> message outputs from the third outlet the minimum and maximum
				coordinates displayed on the X axis, preceded by a <m>domain</m> symbol.
			</description>
		</method>
		<method name="getinfo">
			<arg name="x" optional="0" type="number" />
			<arg name="y" optional="0" type="number" />
			<digest>
				Output information
			</digest>
			<description>
				A <m>getinfo</m> symbol, followed by two numbers <m>x</m> and <m>y</m>,
				outputs the information for the point (<m>x</m>, <m>y</m>), in the form:
				<b>(coord <m>x</m> <m>y</m>) (belong <m>B</m>) (numiter <m>N</m>)</b>, where <m>B</m> is 1 if the iterated system
				multibrots for the introduced point, or 0 otherwise, and <m>N</m> is the number of iterations
				that it took to verify the divergence (if any, otherwise <m>N</m> will be equal to <m>maxiter</m>).
			</description>
		</method>
		<method name="getrange">
			<arglist />
			<digest>
				Retrieve current Y range
			</digest>
			<description>
				The <m>getrange</m> message outputs from the third outlet the minimum and maximum
				coordinates displayed on the Y axis, preceded by a <m>range</m> symbol.
			</description>
		</method>
		<method name="range">
			<arg name="arguments" optional="0" type="list" />
			<digest>
				Set the Y range
			</digest>
			<description>
				The <m>range</m> message, followed by two numbers, sets minimum and maximum coordinates
				to be displayed on the Y axis
				The <m>range</m> message,  followed by the "start" or "end" symbol and a number, sets the coordinate
				to be displayed respectively at the bottom boundary or at top right boundary of the object box.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="exp" get="1" set="1" type="float" size="1">
			<digest>
				Exponent
			</digest>
			<description>
				Sets the exponent for the convergence formula.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Algorithm" />
				<attribute name="default" get="1" set="1" type="float" size="1" value="2." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Exponent" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="grid" get="1" set="1" type="" size="1">
			<digest>
				
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="" size="1" value="0.2 0.2" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="knobcolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Knob Color
			</digest>
			<description>
				Sets the color of the test cursor.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0.3 0.3 0.3 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Knob Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="knobsize" get="1" set="1" type="float" size="1">
			<digest>
				Knob Size
			</digest>
			<description>
				Sets the knob size.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Appearance" />
				<attribute name="default" get="1" set="1" type="float" size="1" value="5." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Knob Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="maxiter" get="1" set="1" type="int" size="1">
			<digest>
				Maximum Number of Iterations
			</digest>
			<description>
				Sets the maximum number of iterations for the convergence algorithm.
				The bigger this number is, the slower the calculation will be.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Algorithm" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="100" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Maximum Number of Iterations" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message. To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format, e
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="presentation_rect" get="1" set="1" type="" size="1">
			<digest>
				
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="" size="1" value="0 0 300 300" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="setcolor" get="1" set="1" type="rgba" size="1">
			<digest>
				Set Color
			</digest>
			<description>
				Color of the multibrot set (i.e. of all the non-divergent points)
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Color" />
				<attribute name="default" get="1" set="1" type="rgba" size="1" value="0. 0. 0. 1." />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Set Color" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="showfocus" get="1" set="1" type="int" size="1">
			<digest>
				Show Focus
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Appearance" />
				<attribute name="default" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Show Focus" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="start" get="1" set="1" type="float_array" size="0">
			<digest>
				Starting Position
			</digest>
			<description>
				Sets the initial position for the convergence algorithm;
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Algorithm" />
				<attribute name="default" get="1" set="1" type="float_array" size="0" value="0 0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Starting Position" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="zoom" get="1" set="1" type="" size="1">
			<digest>
				
			</digest>
			<description>
			</description>
			<attributelist>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The multibrot set is defined as the set of all non-divergent complex points <m>c</m> under the iterated system
		z ↤ z^d + c
		The exponent d is the set via the <m>exp</m> attribute.
		Complex points are interpreted in the straightforward (x, y) representation of the Gauss plane.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.nodes" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (getinfo)">
			<description>
				Get information about point.
				First inlet expects <m>getinfo</m> message followed by the <m>x</m> and <m>y</m> of the point to inspect.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				Dump outlet (unused).
				This outlet is currently unused, and kept for possible future compatibiity.
			</description>
		</entry>
		<entry name ="Outlet 2 (llll)">
			<description>
				Queries and Notifications.
				Outputs result for queries and notifications
			</description>
		</entry>
		<entry name ="Outlet 3 (llll)">
			<description>
				Click information.
				Outputs convergence information for the clicked point
			</description>
		</entry>
		<entry name ="Outlet 4 (llll)">
			<description>
				Message information.
				Outputs convergence information when a <m>getinfo</m> message is received
			</description>
		</entry>
		<entry name ="Outlet 5 (bang)">
			<description>
				bang when object is changed via the interface (unused).
				This outlet is currently unused, and kept for possible future compatibiity.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The multibrot set is defined as the set of all non-divergent complex points <m>c</m> under the iterated system
		z ↤ z^d + c
		The exponent d is the set via the <m>exp</m> attribute.
		Complex points are interpreted in the straightforward (x, y) representation of the Gauss plane.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
surface, multibrot, fractal, mandelbrot, set, julia, series, converge, convergence, diverge, divergence.
			</description>
		</entry>
	</misc>

</c74object>