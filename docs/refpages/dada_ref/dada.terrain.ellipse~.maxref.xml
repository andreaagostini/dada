<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="dada.terrain.ellipse~" module="dada" kind="patcher">

	<digest>
		Paths along circles or ellipses
	</digest>

	<description>
		Produces the coordinates of paths along ellipses at sample rate.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Daniele Ghisi</metadata>
		<metadata name="tag">dada</metadata>
		<metadata name="tag">dada abstractions</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				Phase (0-1)
			</digest>
			<description>
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				X or radius
			</digest>
			<description>
				Outputs the X coordinate (if <m>polar</m> is 0)
				or the radius (if <m>polar</m> is 1)
			</description>
		</outlet>
		<outlet id="1" type="INLET_TYPE">
			<digest>
				Y or angle
			</digest>
			<description>
				Outputs the Y coordinate (if <m>polar</m> is 0)
				or the angle (if <m>polar</m> is 1)
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="a" optional="1" type="double">
			<digest>
				First axis size
			</digest>
			<description>
				Sets the initial size of the first ellipse axis.
			</description>
		</objarg>
		<objarg name="b" optional="1" type="double">
			<digest>
				Second axis size
			</digest>
			<description>
				Sets the initial size of the second ellipse axis.
			</description>
		</objarg>
		<objarg name="rot" optional="1" type="double">
			<digest>
				Rotation angle
			</digest>
			<description>
				Sets the initial ellipse rotation angle, in radians.
			</description>
		</objarg>
		<objarg name="xc" optional="1" type="double">
			<digest>
				Center X
			</digest>
			<description>
				Sets the initial X coordinate of the ellipse center.
			</description>
		</objarg>
		<objarg name="yc" optional="1" type="double">
			<digest>
				Center Y
			</digest>
			<description>
				Sets the initial Y coordinate of the ellipse center.
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="signal">
			<arglist />
			<digest>
				Compute path
			</digest>
			<description>
				An incoming signal is usually the output of a <o>phasor~</o> object,
				i.e. the phase of the path (from 0 = beginning, to 1 = end). The corresponding
				point on the ellipse path is computed and output.
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="a" get="1" set="1" type="float" size="1">
			<digest>
				First Axis Size
			</digest>
			<description>
				Sets the size of the first ellipse axis.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="float" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="First Axis Size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="b" get="1" set="1" type="float" size="1">
			<digest>
				Second Axis size
			</digest>
			<description>
				Sets the size of the second ellipse axis.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="float" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Second Axis size" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="center" get="1" set="1" type="float_array" size="0">
			<digest>
				Ellipse Center
			</digest>
			<description>
				Sets the cartesian coordinates of the ellipse center.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="float_array" size="0" value="0 0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Ellipse Center" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
		<attribute name="polar" get="1" set="1" type="int" size="1">
			<digest>
				Output Polar Coordinates
			</digest>
			<description>
				Toggles the ability to output polar coordinates (radius, from left
				outlet, and angle, from right outlet). By default it is active; if it is
				turned off, the output is in cartesian coordinates (X, from left outlet, and Y
				from right outlet).
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Output Polar Coordinates" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
		<attribute name="rot" get="1" set="1" type="float" size="1">
			<digest>
				Rotation
			</digest>
			<description>
				Sets the ellipse rotation angle, in radians.
			</description>
			<attributelist>
				<attribute name="default" get="1" set="1" type="float" size="1" value="0" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Rotation" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="dada.terrain~" />
		<seealso name="dada.terrain.rect~" />
		<seealso name="dada.terrain.segment~" />
		<seealso name="dada.terrain.spiral~" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (signal)">
			<description>
				Phase (0-1).
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (signal)">
			<description>
				X or radius.
				Outputs the X coordinate (if <m>polar</m> is 0)
				or the radius (if <m>polar</m> is 1)
			</description>
		</entry>
		<entry name ="Outlet 2 (signal)">
			<description>
				Y or angle.
				Outputs the Y coordinate (if <m>polar</m> is 0)
				or the angle (if <m>polar</m> is 1)
			</description>
		</entry>
	</misc>

</c74object>